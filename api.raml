#%RAML 1.0
title: shotstack
version: v1
mediaType: application/json
baseUri: http://api.shotstack.io/{version}
description: |
  The ShotStack API is a video editing service that allows for the programatic
  creation of videos using JSON.
securitySchemes:
  DeveloperKey:
    description: |
      Secured using an API developer key as specified
    type: x-custom
    describedBy:
      headers:
        x-api-key:
          description: |
            Use your provided 40 character developer key
          type: string
      responses:
        403:
          description: |
            Denied
types:
  Edit:
    description: |
      An edit defines the content of the video in a timeline and the output
      format
    properties:
      timeline: Timeline
      output: Output

  Timeline:
    description: |
      A timeline represents the contents of a video edit over time, in seconds.
      A timeline consists of layers called tracks. Tracks are composed of
      titles, images or video segments referred to as clips which are placed
      along the track at specific starting point and lasting for a specific
      amount of time.
    properties:
      soundtrack: Soundtrack
      background:
        description: A hexidecimal value for the timeline background colour.
      tracks:
        type: Track[]
        description: |
          A timeline consists of an array of tracks, each track containing clips.
          Tracks are layered on top of each other in the same order they are
          added to the array with the top most track layered over the top of
          those below it. Ensure that a track containing titles is the top most
          track so that it is displayed above videos and images.

  Soundtrack:
    properties:
      src:
        description: The path to the audio file
      effect:
        description: The effect to apply to the audio file

  Track:
    description: |
      A track contains an array of clips. Tracks are layered on top of each
      other in the order in the array. The top most track will render on top of
      those below it.
    properties:
      clips:
        type: array
        items: TitleClip | ImageClip | VideoClip
        description: An array of Clips comprising of TitleClip, ImageClip or VideoClip.

  TitleClip:
    description: |
      The TitleClip clip type lets you create video titles and apply filters,
      font effects and transitions. The <b>src</b> attribute sets
      the text to be rendered - i.e. "My Title". Font properties are set using a
      selection of presets using the TitleClipOptions effect option.
    properties:
      type:
        enum: [title]
        description: |
          The type of clip - must be set to <b>title</b> to create titles.
      src:
        type: string
        description: The title text string - i.e. "My Title".
      start:
        type: number
        description: The start position on the timeline, in seconds.
      in:
        type: number
        description: |
          The in trim point of the clip, in seconds. For titles this should be
          set to 0.
      out:
        type: number
        description: |
          The out trim point of the clip, in seconds. For titles this
          will be the time you want the clip to play for - i.e. a value of 2
          will display the title for 2 seconds if the in mark is set to 0.
      transition?: Transition
      options: TitleClipOptions

  TitleClipOptions:
    description: |
      Filter and effects preset options for title clips. The effects option sets the
      font properties and motion effects for the title using a pre-configured
      preset.
    properties:
      effect?:
        description: |
          Uses a preset to apply font properties and motion effect to the title.
        type:
          enum: [minimal, blockbuster, vogue, sketchy, skinny]
      filter?:
        description: A filter effect to apply to the text clip.
        type:
          enum: [boost, contrast, darken, greyscale, lighten, muted, negative]

  ImageClip:
    description: |
      This is a clip with specific options for rendering static images. The src
      must be a publicly accesible URL to an image resource such as a jpg or
      png file.
    properties:
      type:
        enum: [image]
        description: |
          The type of clip - must be set to <b>image</b> for image clips.
      src:
        type: string
        description: |
          The image source URL. The URL must be publicly accessible or
          include credentials.
      start:
        type: number
        description: The start position on the timeline, in seconds.
      in:
        type: number
        description: |
          The in trim point of the clip, in seconds. For images this should be
          set to 0.
      out:
        type: number
        description: |
          The out trim point of the clip, in seconds. For images this
          will be the time you want the clip to play for - i.e. a value of 2
          will display the image for 2 seconds if the in mark is set to 0.
      transition?: Transition
      options?: ImageClipOptions

  ImageClipOptions:
    description: |
      Filter and effects preset options for title clips.
    properties:
      effect?:
        description: A motion effect to apply to the image clip.
        type:
          enum: [zoomIn, zoomOut]
      filter?:
        description: A filter effect to apply to the image clip.
        type:
          enum: [boost, contrast, darken, greyscale, lighten, muted, negative]

  VideoClip:
    description: |
      This is a clip with specific options for rendering video. The src
      must be a publicly accesible URL to a video resource such as an mp4 file.
      The in and out attributes let you trim the video file by setting the start
      and end point to use.
    properties:
      type:
        enum: [video]
        description: |
          The type of clip - must be set to <b>video</b> for video clips
      src:
        type: string
        description: |
          The video source URL. The URL must be publicly accessible or
          include credentials.
      start:
        type: number
        description: The start position on the timeline, in seconds
      in:
        type: number
        description: |
          The in trim point of the clip, in seconds. This is the point in
          seconds to trim the clip from - i.e if the video is 20 seconds long
          and you want to trim the clip to start at the 5 second mark; set the
          in attribute to 5.
      out:
        type: number
        description: |
          The out trim point of the clip, in seconds. This is the point in
          seconds to trim the clip to - i.e if the video is 20 seconds long and
          you want to trim the clip to end at the 10 second mark; set the out
          attribute to 10.
      transition?: Transition
      options?: VideoClipOptions

  VideoClipOptions:
    description: |
      Filter and effects preset options for video clips.
    properties:
      effect?:
        description: A motion effect to apply to the video clip.
        type:
          enum: [zoomIn, zoomOut]
      filter?:
        description: A filter effect to apply to the video clip.
        type:
          enum: [boost, contrast, darken, greyscale, lighten, muted, negative]

  Transition:
    description: In and out transitions for a clip - i.e. fade in and fade out
    properties:
      in?:
        description: The transition in
        type:
          enum: [fadeIn]
      out?:
        description: The transition out
        type:
          enum: [fadeOut]

  Output:
    description: The video output format
    properties:
      format:
        type:
          enum: [mp4, gif]
      resolution:
        type:
          enum: [preview, mobile, sd, hd, '1080']

  QueuedResponse:
    properties:
      success: boolean
      message: string
      data: Queued

  Queued:
    properties:
      message:
        description: Success response message
      id:
        description: The id of the render task in UUID format

/render:
  post:
    description: Render the contents of a timeline as a video file.
    securedBy: DeveloperKey
    body:
      application/json:
        type: Edit
        example:
          timeline:
            soundtrack:
              src: "music.mp3"
              effect: "fadeInOut"
            background: "#000000"
            tracks:
              -
                clips:
                  -
                    type: "title"
                    src: "Hello World"
                    start: 0
                    in: 0.0
                    out: 4.0
                    transition:
                      in: "fadeIn"
                      out: "fadeOut"
                    options:
                      effect: "minimal"
                  -
                    type: "image"
                    src: "https://s3-ap-northeast-1.amazonaws.com/my-bucket/my-image.jpg"
                    start: 3
                    in: 14.0
                    out: 16.4
                    options:
                      effect: "zoomIn"
                      filter: "greyscale"
              -
                clips:
                  -
                    type: "video"
                    src: "https://s3-ap-northeast-1.amazonaws.com/my-bucket/my-clip-1.mp4"
                    start: 0
                    in: 4.0
                    out: 7.0
                  -
                    type: "video"
                    src: "https://s3-ap-northeast-1.amazonaws.com/my-bucket/my-clip-2.mp4"
                    start: 3
                    in: 14.0
                    out: 16.4
                    transition:
                      out: "fadeOut"
          output:
            format: "mp4"
            resolution: "sd"
    responses:
       201:
        body:
          application/json:
            type: QueuedResponse
            example:
              success: true
              message: "Created"
              data:
                message: "Render Successfuly Queued"
                id: "2abd5c11-0f3d-4c6d-ba20-235fc9b8e8b7"

documentation:
 - title: Introduction
   content: |
     EditEngine enables developers to describe and output an edited video using
     JSON. Sources include video and image files as well as text to create
     titles.
